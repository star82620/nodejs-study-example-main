version: "3.8"
volumes:
  pgData:
services:
  postgres:
    image: postgres:16.4-alpine3.20
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pgData:/var/lib/postgresql/data
    ports:
      - 5432:5432
    deploy:
      replicas: 1
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  backend:
    build:
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - "${PORT}:${PORT}"
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: 3
        compress: "true"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:${PORT}/healthcheck || exit 1
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 30s
    deploy:
      replicas: 1
networks:
  backend:
